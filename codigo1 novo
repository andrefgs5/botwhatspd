const fs = require('fs');

// Load user data from file, if it exists
let userData = {};
if (fs.existsSync('userData.json')) {
  userData = JSON.parse(fs.readFileSync('userData.json'));
}

// Games for the day
let games = [
  {
    name: "Game 1",
    time: "10h00",
    court: "M4",
    players: []
  },
  {
    name: "Game 2",
    time: "12h00",
    court: "M3",
    players: []
  },
  {
    name: "Game 3",
    time: "14h00",
    court: "M2",
    players: []
  },
  {
    name: "Game 4",
    time: "16h00",
    court: "M1",
    players: []
  }
];

// Add fake number to the list of players
const fakeNumber = "+351936836204";
userData[fakeNumber] = {
  firstName: "AndrÃ©",
  lastName: "Silva",
  rating: 1200,
  last3Games: []
};

// Function to calculate Elo changes
function calculateEloChange(player1, player2, score) {
  const [eloChange1, eloChange2] = updateElo(player1, player2, score[0] > score[1] ? 1 : score[0] < score[1] ? 2 : 0);

  return [eloChange1, eloChange2];
}

// Function to update user data after a match
function updateUserData(game, team1, team2, score) {
  // Calculate Elo changes for each player
  const [delta1, delta2] = calculateEloChange(team1[0], team2[0], score);
  team1[0].rating += delta1;
  team2[0].rating += delta2;

  // Update user data for each player in team 1
  for (const player of team1) {
    const phoneNumber = player.phoneNumber;
    userData[phoneNumber].rating = player.rating;
    const gameResult = {
      name: game.name,
      score: score,
      partner: team1.find(p => p !== player).firstName + " " + team1.find(p => p !== player).lastName,
      opponent: team2[0].firstName + " " + team2[0].lastName,
      eloChange: Math.round(delta1)
    };
    userData[phoneNumber].last3Games.push(gameResult);
    if (userData[phoneNumber].last3Games.length > 3) {
      userData[phoneNumber].last3Games.shift();
    }
  }

  // Update user data for each player in team 2
  for (const player of team2) {
    const phoneNumber = player.phoneNumber;
    userData[phoneNumber].rating = player.rating;
    const gameResult = {
      name: game.name,
      score: [score[1], score[0]],
      partner: team2.find(p => p !== player).firstName + " " + team2.find(p => p !== player).lastName,
      opponent: team1[0].firstName + " " + team1[0].lastName,
      eloChange: Math.round(delta2)
    };
    userData[phoneNumber].last3Games.push(gameResult);
    if (userData[phoneNumber].last3Games.length > 3) {
      userData[phoneNumber].last3Games.shift();
    }
  }

  // Save updated user data to file
  fs.writeFileSync('userData.json', JSON.stringify(userData));
