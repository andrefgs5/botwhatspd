{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh20500\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const kFactor = 32;\
const q = 400 / Math.log(10);\
\
function expectedScore(rating1, rating2) \{\
  return 1 / (1 + Math.pow(10, (rating2 - rating1) / q));\
\}\
\
function updateElo(player1, player2, outcome) \{\
  const score1 = outcome === 1 ? 1 : outcome === 2 ? 0 : 0.5;\
  const score2 = outcome === 2 ? 1 : outcome === 1 ? 0 : 0.5;\
\
  const expected1 = expectedScore(player2.rating, player1.rating);\
  const expected2 = expectedScore(player1.rating, player2.rating);\
\
  const margin = Math.abs(score1 - expected1) + Math.abs(score2 - expected2);\
\
  const eloChange1 = Math.round(kFactor * (score1 - expected1 + 0.5 * margin));\
  const eloChange2 = Math.round(kFactor * (score2 - expected2 + 0.5 * margin));\
\
  player1.rating += eloChange1;\
  player2.rating += eloChange2;\
\
  return [eloChange1, eloChange2];\
\}\
}