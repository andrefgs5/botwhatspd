// List of games
let games = [
  {
    name: "Game 1",
    time: "10h00",
    court: "M4",
    players: [],
    maxPlayers: 4,
    results: []
  },
  {
    name: "Game 2",
    time: "12h00",
    court: "M3",
    players: [],
    maxPlayers: 4,
    results: []
  }
];

// User data
let users = [
  {
    phone: "+351936836204",
    firstName: "AndrÃ©",
    lastName: "Silva",
    eloRating: 1232,
    gamesPlayed: [
      {
        name: "Game 1",
        result: "6-4 / 6-2"
      },
      {
        name: "Game 2",
        result: "6-3 / 6-2"
      }
    ]
  },
  {
    phone: "+351910229988",
    firstName: "Maria",
    lastName: "Santos",
    eloRating: 1100,
    gamesPlayed: []
  }
];

// Function to join a game alone
function joinGameAlone(phoneNumber, gameName) {
  // Find the user
  let user = users.find(user => user.phone === phoneNumber);
  
  // Find the game
  let game = games.find(game => game.name === gameName);
  
  if (!user) {
    return "User not found";
  }
  
  if (!game) {
    return "Game not found";
  }
  
  // Check if user is already in the game
  if (game.players.includes(user)) {
    return "You are already in the game";
  }
  
  // Check if the game is full
  if (game.players.length >= game.maxPlayers) {
    return "Sorry, the game is full";
  }
  
  // Add user to the game
  game.players.push(user);
  
  // Generate message
  let message = `You have successfully joined ${gameName}.\nPlayers: `;
  game.players.forEach((player, index) => {
    message += `\n${index + 1}. ${player.firstName} ${player.lastName} (${player.eloRating})`;
  });
  
  return message;
}

// Function to join a game with a partner
function joinGameWithPartner(phoneNumber, gameName, partnerPhoneNumber) {
  // Find the user
  let user = users.find(user => user.phone === phoneNumber);
  
  // Find the partner
  let partner = users.find(user => user.phone === partnerPhoneNumber);
  
  // Find the game
  let game = games.find(game => game.name === gameName);
  
  if (!user) {
    return "User not found";
  }
  
  if (!partner) {
    return "Partner not found";
  }
  
  if (!game) {
    return "Game not found";
  }
  
  // Check if user is already in the game
  if (game.players.includes(user)) {
    return "You are already in the game";
  }
  
  // Check if the game is full
  if (game.players.length + 1 >= game.maxPlayers) {
    return "Sorry, the game is full";
  }
  
  // Add user and partner to the game
  game.players.push(user);
  game.players.push(partner);
  
  // Generate message
  let message = `You and ${partner.firstName} ${partner.lastName} have successfully joined ${gameName}.\nPlayers: `;
  game.players.forEach((player, index)
